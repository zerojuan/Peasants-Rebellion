define("PlayChess",["jquery","Tilemap","ChessPiece","PieceManager","MovesLayer","TouchMovesLayer","MovesHistory","easel","preload"],function(e,t,n,r,i,s,o){var u,a=[{src:"assets/tileset.png",id:"tileset"},{src:"assets/white-piece.png",id:"white"},{src:"assets/black-piece.png",id:"black"}];return u=function(e){console.log("Starting Chess game"),this.color=e.color,this.turn=e.turn,this.listeners=[],this.activePiece=null},u.prototype={addMoveListener:function(e){this.listeners.push(e)},dispatchMoveEvent:function(e,t){for(var n in this.listeners){var r=this.listeners[n];r.onMove(e,t)}},dispatchTouchEvent:function(e){for(var t in this.listeners){var n=this.listeners[t];n.onTouch(e)}},dispatchTapEvent:function(){for(var e in this.listeners){var t=this.listeners[e];t.onTap()}},setColor:function(e){this.color=e},setTurn:function(e){if(this.gameOver)return;this.turn=e,this.whitePieceManager.updateTurn(e),this.blackPieceManager.updateTurn(e)},showMove:function(e,t){this.movesHistory.showMove(e,t,this.getBoardData())},hideMove:function(){this.movesHistory.hideMove()},showGameOver:function(e){this.gameOver=!0,this.stage.onMouseUp=null,this.whitePieceManager.updateWinner(e),this.blackPieceManager.updateWinner(e)},onTouch:function(e){this.touchMovesLayer&&this.touchMovesLayer.onTouch(this.getBoardData(),e)},initialize:function(e,n,u){var f=this;this.gameOver=!1,this.gameData=n,this.assets=[],this.boardData=f.gameData.board,this.canvas=e,this.stage=new createjs.Stage(e),createjs.Touch.enable(this.stage),this.stage.onMouseUp=function(e){f.handleInput(e)},this.stage.onMouseDown=function(e){f.handleMouseDown(e)},this.offset={x:32,y:32};var l=new createjs.Graphics;l.beginFill("#cc0"),l.drawRect(0,0,64,64),l.endFill();var c=new createjs.Graphics;c.beginFill("#c00"),c.drawRect(0,0,64,64),c.endFill(),this.tileDown=new createjs.Shape(l),this.tileDown.alpha=0,this.tileDown.x=-300,this.tileDown.y=-300,this.checkerStart=new createjs.Shape(c),this.checkerStart.alpha=0,this.checkerEnd=new createjs.Shape(c),this.checkerEnd.alpha=0,this.loader=new createjs.PreloadJS,this.loader.useXHR=!1,this.loader.onFileLoad=function(e){f.assets.push(e)},this.loader.onComplete=function(e){var n,a,l=f.gameData.board;f.piecesLayer=new createjs.Container;for(var c=0;c<f.assets.length;c++){var h=f.assets[c],p=h.id,d=h.result;if(h.type==createjs.PreloadJS.IMAGE)var v=new createjs.Bitmap(d);switch(p){case"black":console.log("BLACK pieces loaded"),f.blackPieceManager=new r({color:"B",bitmap:d,container:f.piecesLayer});for(var m=0;m<l.length;m++)for(var g=0;g<l[m].length;g++){var y=f.extractPiece(l[m][g],"B");y&&f.blackPieceManager.addPiece(y,m,g)}break;case"white":console.log("WHITE pieces loaded"),f.whitePieceManager=new r({color:"W",bitmap:d,container:f.piecesLayer});for(var m=0;m<l.length;m++)for(var g=0;g<l[m].length;g++){var b=f.extractPiece(l[m][g],"W");b&&f.whitePieceManager.addPiece(b,m,g)}break;case"tileset":var w=[[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1],[1,0,1,0,1,0,1,0]],E=[[4,4,4,4,4,4,4,4],[5,5,5,5,5,5,5,5]];tileMap=new t({tileSheet:d,map:w}),borderMap=new t({tileSheet:d,map:E}),tileMap.y=f.offset.y,tileMap.x=f.offset.x,borderMap.y=192+f.offset.y}}f.movesLayer=new i,f.movesLayer.graphics.y=f.offset.y,f.movesLayer.graphics.x=f.offset.x,f.touchMovesLayer=new s,f.touchMovesLayer.graphics.x=f.offset.x,f.touchMovesLayer.graphics.y=f.offset.y,f.movesHistory=new o,f.movesHistory.graphics.x=f.offset.x,f.movesHistory.graphics.y=f.offset.y-20,f.piecesLayer.x=f.offset.x,f.piecesLayer.y=f.offset.y-20,f.stage.addChild(tileMap,f.touchMovesLayer.graphics,f.movesLayer.graphics,f.checkerStart,f.checkerEnd,f.tileDown,f.piecesLayer,f.movesHistory.graphics),f.setTurn(f.turn),f.restackPieceLayers(),createjs.Ticker.setFPS(40),createjs.Ticker.addListener(f),u()},this.loader.loadManifest(a)},handleMouseDown:function(e){var t=e.rawX-this.offset.x,n=e.rawY-this.offset.y;if(t<0||n<0)return;if(t>512||n>512)return;var r=Math.floor(t/64),i=Math.floor(n/64);this.tileDown.x=r*64+this.offset.x,this.tileDown.y=i*64+this.offset.y,createjs.Tween.get(this.tileDown,{override:!0}).to({alpha:.6},500)},handleInput:function(e){var t=e.rawX-this.offset.x,n=e.rawY-this.offset.y;if(t<0||n<0)return;if(t>512||n>512)return;this.tileDown.alpha=.6,this.dispatchTapEvent(),this.hideMove(),createjs.Tween.get(this.tileDown,{override:!0}).to({alpha:0},500);var r=Math.floor(t/64),i=Math.floor(n/64),s,o;this.color=="W"?s=this.whitePieceManager.findSelectedGamePiece(i,r):this.color=="B"&&(s=this.blackPieceManager.findSelectedGamePiece(i,r)),this.color==this.turn?this.activePiece?s?this.activePiece.col==s.col&&this.activePiece.row==s.row?this.activatePiece(null):(console.log("Selected Piece: "+s.type),this.activatePiece(s)):this.movesLayer.isPossibleMove(i,r)?this.dispatchMoveEvent(this.activePiece,{row:i,col:r}):this.activatePiece(null):s&&(console.log("Piece selected: "+s.type),this.activatePiece(s)):console.log("Its not your turn"),console.log("Tapped: ["+i+", "+r+"]")},activatePiece:function(e){if(e==null)console.log("Deactivating piece"),this.activePiece&&this.activePiece.deactivate(),this.movesLayer.deactivate(),this.deactivateChecker();else{this.activePiece&&this.activePiece.deactivate(),e.activate(),this.dispatchTouchEvent(e);var t=this.getPossibleMoves(e);if(t&&t.length>0)this.movesLayer.setPossibleMoves(e,t);else{var n=this.getPossibleCheckers(e);n&&n.length>0&&(this.checker=n[0],this.checker.color=="B"?this.checker=this.blackPieceManager.findSelectedGamePiece(n[0].from.row,n[0].from.col):this.checker=this.whitePieceManager.findSelectedGamePiece(n[0].from.row,n[0].from.col),this.activateChecker(n[0]))}}this.activePiece=e},extractPiece:function(e,t){return e.charAt(0)==t?e.charAt(1):null},activateChecker:function(e){this.checker.activate(),this.checkerStart.x=e.from.col*64+this.offset.x,this.checkerStart.y=e.from.row*64+this.offset.y,this.checkerEnd.x=e.to.col*64+this.offset.x,this.checkerEnd.y=e.to.row*64+this.offset.y,this.checkerStart.alpha=this.checkerEnd.alpha=0,createjs.Tween.get(this.checkerStart,{override:!0,loop:!0}).to({alpha:.3},300).wait(300).to({alpha:.1},200),createjs.Tween.get(this.checkerEnd,{override:!0,loop:!0}).to({alpha:.3},300).wait(300).to({alpha:.1},200)},deactivateChecker:function(){this.checker&&(this.checker.sleep(),this.checker=null,this.checkerStart.alpha=this.checkerEnd.alpha=.3,createjs.Tween.get(this.checkerStart,{override:!0}).to({alpha:0},300),createjs.Tween.get(this.checkerEnd,{override:!0}).to({alpha:0},300))},getBoardData:function(){var e=[["0","0","0","0","0","0","0","0"],["0","0","0","0","0","0","0","0"],["0","0","0","0","0","0","0","0"],["0","0","0","0","0","0","0","0"],["0","0","0","0","0","0","0","0"],["0","0","0","0","0","0","0","0"],["0","0","0","0","0","0","0","0"],["0","0","0","0","0","0","0","0"]];for(var t in this.blackPieceManager.pieces){var n=this.blackPieceManager.pieces[t];n.alive&&(e[n.row][n.col]="B"+n.type)}for(var t in this.whitePieceManager.pieces){var n=this.whitePieceManager.pieces[t];n.alive&&(e[n.row][n.col]="W"+n.type)}return e},getPossibleCheckers:function(e){var t=this.getBoardData(),n={row:e.row,col:e.col},r=chessLogic.exports.endGameCheck(t,e.type,n,n,e.color).checkers;return r},getPossibleMoves:function(e){var t=this.getBoardData(),n=chessLogic.exports.getPossibleMoves(t,e);return n},updatePiece:function(e){var t=this,n=function(){t.activatePiece(null),t.restackPieceLayers(),t.setTurn(e.turn),t.movesLayer.deactivate()};e.color=="B"?(this.blackPieceManager.movePiece(e.from,e.to,n),this.whitePieceManager.removePiece(e.to)):e.color=="W"&&(this.whitePieceManager.movePiece(e.from,e.to,n),this.blackPieceManager.removePiece(e.to))},restackPieceLayers:function(){var e=function(e,t){return e.y<t.y?-1:e.y>t.y?1:0};this.piecesLayer.sortChildren(e)},tick:function(){this.stage.update()}},u});